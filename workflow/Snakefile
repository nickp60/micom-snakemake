import os
import sys


from micom import Community
import micom.qiime_formats as qf
from micom.qiime_formats import load_qiime_medium
from micom.workflows import grow, save_results, build, tradeoff, load_results
from micom import Community
import seaborn as sns
import pandas as pd

#configfile: os.path.join(workflow.basedir, "../config/config.yaml")


valid_stages = ["format16S", "annotate16S", "tradeoff", "grow"]

# here we sort out the config args not needed by certain stages
thisstage = config['stage']
match thisstage:
    case "format16S":
        config["db_nsq_path"] = "na"
        config["asv_fasta"] = "na"
        config["id"] = None
        modname = "format16S"
    case "annotate16S":
        config["agora_genomes"] = None
        config["dbname"] = None
        modname = "annotate16S"
    case "tradeoff":
        modname = "tradeoff_and_grow"
        config['tradeoff']=None
    case "grow":
        modname = "tradeoff_and_grow"
    case _:
        raise ValueError(f"{thisstage} not a valid stage; choose one of: {', '.join(valid_stages)}")

# this has to be a variable to work in "use rule", cant use config['stage']
module:
    name: thisstage
    snakefile:
        f"rules/{modname}.smk"
    config:
        config

use rule * from thisstage as thisstage*

outputs = getattr(rules, f"{config['stage']}all").input


rule all:
    input:
        outputs,
    default_target: True
